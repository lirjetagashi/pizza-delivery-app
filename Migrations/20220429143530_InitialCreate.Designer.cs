// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaDeliveryApp.Entities;

#nullable disable

namespace PizzaDeliveryApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220429143530_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ItemTopping", b =>
                {
                    b.Property<long>("ItemsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToppingsId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemsId", "ToppingsId");

                    b.HasIndex("ToppingsId");

                    b.ToTable("ItemTopping", (string)null);

                    b.HasData(
                        new
                        {
                            ItemsId = 1L,
                            ToppingsId = 1L
                        },
                        new
                        {
                            ItemsId = 1L,
                            ToppingsId = 2L
                        },
                        new
                        {
                            ItemsId = 1L,
                            ToppingsId = 4L
                        },
                        new
                        {
                            ItemsId = 1L,
                            ToppingsId = 7L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 1L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 2L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 3L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 4L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 5L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 7L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 8L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 9L
                        },
                        new
                        {
                            ItemsId = 2L,
                            ToppingsId = 10L
                        });
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Medium Chicken Special Pizza",
                            Price = 13.99
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Medium Greek Pizza",
                            Price = 12.99
                        });
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("double");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.OrderLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.Topping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Toppings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Chicken"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Mushrooms"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Feta Cheese"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Onions"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Peperoni"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Tomato Sauce"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Green Pepper"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Green Olives"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Black Olives"
                        });
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "bob.smith@gmail.com",
                            FirstName = "Bob",
                            LastName = "Smith",
                            PhoneNumber = "1231231234"
                        });
                });

            modelBuilder.Entity("ItemTopping", b =>
                {
                    b.HasOne("PizzaDeliveryApp.Entities.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDeliveryApp.Entities.Topping", null)
                        .WithMany()
                        .HasForeignKey("ToppingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.Order", b =>
                {
                    b.HasOne("PizzaDeliveryApp.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.OwnsOne("PizzaDeliveryApp.Entities.Address", "ShippingAddress", b1 =>
                        {
                            b1.Property<long>("OrderId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line2")
                                .HasColumnType("longtext");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("OrderId");

                            b1.ToTable("OrderAddresses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("ShippingAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.OrderLine", b =>
                {
                    b.HasOne("PizzaDeliveryApp.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDeliveryApp.Entities.Order", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.User", b =>
                {
                    b.OwnsOne("PizzaDeliveryApp.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Line2")
                                .HasColumnType("longtext");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("UserId");

                            b1.ToTable("UserAddresses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1L,
                                    City = "Waterloo",
                                    Country = "Canada",
                                    Line1 = "123 King St",
                                    PostalCode = "N1L 2L1",
                                    Province = "ON"
                                });
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaDeliveryApp.Entities.Order", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
